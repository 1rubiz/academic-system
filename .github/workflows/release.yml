name: Build & Release

on:
  push:
    tags:
      - 'v*' # trigger on tags like v1.0.0
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [20.x]

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build:renderer
        env:
          NODE_ENV: production

      - name: Install native modules (for Electron)
        run: npm run postinstall

      # ‚öôÔ∏è Package app for each OS
      - name: Package application
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run dist -- --win
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run dist -- --mac
          else
            npm run dist -- --linux
          fi
        shell: bash

      # üßæ List artifacts safely across all OSes
      - name: List artifacts
        shell: bash
        run: |
          echo "Artifacts in dist folder:"
          if [ -d dist ]; then
            ls -la dist
          elif [ -d release ]; then
            ls -la release
          else
            find . -maxdepth 3 -type f \( -name "*.AppImage" -o -name "*.exe" -o -name "*.dmg" -o -name "*.deb" -o -name "*.zip" \)
          fi

      # üè∑Ô∏è Create or update GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # üì¶ Upload all platform artifacts
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            release/*.AppImage
            release/*.deb
            release/*.exe
            release/*.dmg
            release/*.zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
