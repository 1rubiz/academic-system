name: Build & Release

on:
  push:
    branches:
      - 'main'  # trigger on tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build:renderer
        env:
          NODE_ENV: production

      - name: Install app deps (native modules)
        run: npm run postinstall

      - name: Package application
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run dist -- --win
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run dist -- --mac
          else
            npm run dist -- --linux
          fi
        shell: bash

      - name: List artifacts
        run: ls -la dist || ls -la release || find . -maxdepth 3 -type f -name "*AppImage" -o -name "*.exe" -o -name "*.dmg" -o -name "*.deb"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release built by GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
